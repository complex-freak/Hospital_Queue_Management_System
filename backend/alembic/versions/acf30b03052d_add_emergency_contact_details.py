"""Add emergency contact details

Revision ID: acf30b03052d
Revises: 001
Create Date: 2025-06-16 04:56:57.511368

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'acf30b03052d'
down_revision: Union[str, None] = '001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if columns exist before adding them
    conn = op.get_bind()
    
    # Get column information
    insp = sa.inspect(conn)
    columns = [column['name'] for column in insp.get_columns('patients')]
    
    # Only add columns if they don't exist
    if 'emergency_contact_name' not in columns:
        op.add_column('patients', sa.Column('emergency_contact_name', sa.String(length=200), nullable=True))
    
    if 'emergency_contact_relationship' not in columns:
        op.add_column('patients', sa.Column('emergency_contact_relationship', sa.String(length=50), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if columns exist before dropping them
    conn = op.get_bind()
    
    # Get column information
    insp = sa.inspect(conn)
    columns = [column['name'] for column in insp.get_columns('patients')]
    
    # Only drop columns if they exist
    if 'emergency_contact_relationship' in columns:
        op.drop_column('patients', 'emergency_contact_relationship')
    
    if 'emergency_contact_name' in columns:
        op.drop_column('patients', 'emergency_contact_name')
    # ### end Alembic commands ###