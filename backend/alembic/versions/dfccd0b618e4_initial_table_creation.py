"""initial table creation

Revision ID: dfccd0b618e4
Revises: 
Create Date: 2025-06-26 18:50:45.410888

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dfccd0b618e4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_type', sa.String(length=20), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'READ', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'REGISTER', 'DEACTIVATE', 'REACTIVATE', name='auditaction'), nullable=False),
    sa.Column('resource', sa.Enum('USER', 'PATIENT', 'DOCTOR', 'APPOINTMENT', 'QUEUE', 'SYSTEM', name='auditresource'), nullable=False),
    sa.Column('resource_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_log'))
    )
    op.create_table('patients',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=20), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=200), nullable=True),
    sa.Column('emergency_contact_relationship', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_patients'))
    )
    op.create_index(op.f('ix_patients_phone_number'), 'patients', ['phone_number'], unique=True)
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'STAFF', 'RECEPTIONIST', 'DOCTOR', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('device_tokens',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('patient_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('token', sa.String(length=512), nullable=False),
    sa.Column('device_type', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_device_tokens_patient_id_patients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_device_tokens'))
    )
    op.create_table('doctors',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('specialization', sa.String(length=200), nullable=True),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('consultation_fee', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_doctors_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_doctors')),
    sa.UniqueConstraint('user_id', name=op.f('uq_doctors_user_id'))
    )
    op.create_table('notifications',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('patient_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_notifications_patient_id_patients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_table('patient_drafts',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('draft_id', sa.String(), nullable=False),
    sa.Column('staff_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], name=op.f('fk_patient_drafts_staff_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_patient_drafts'))
    )
    op.create_index(op.f('ix_patient_drafts_draft_id'), 'patient_drafts', ['draft_id'], unique=True)
    op.create_table('patient_settings',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('patient_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('sms_notifications', sa.Boolean(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_patient_settings_patient_id_patients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_patient_settings')),
    sa.UniqueConstraint('patient_id', name=op.f('uq_patient_settings_patient_id'))
    )
    op.create_table('appointments',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('patient_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('doctor_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('appointment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('urgency', sa.Enum('LOW', 'NORMAL', 'HIGH', 'EMERGENCY', name='urgencylevel'), nullable=True),
    sa.Column('status', sa.Enum('SCHEDULED', 'WAITING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='appointmentstatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_appointments_created_by_users')),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], name=op.f('fk_appointments_doctor_id_doctors')),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_appointments_patient_id_patients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_appointments'))
    )
    op.create_table('queue',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('appointment_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_number', sa.Integer(), nullable=False),
    sa.Column('priority_score', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('WAITING', 'CALLED', 'SERVING', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='queuestatus'), nullable=True),
    sa.Column('estimated_wait_time', sa.Integer(), nullable=True),
    sa.Column('called_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('served_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], name=op.f('fk_queue_appointment_id_appointments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_queue')),
    sa.UniqueConstraint('appointment_id', name=op.f('uq_queue_appointment_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('queue')
    op.drop_table('appointments')
    op.drop_table('patient_settings')
    op.drop_index(op.f('ix_patient_drafts_draft_id'), table_name='patient_drafts')
    op.drop_table('patient_drafts')
    op.drop_table('notifications')
    op.drop_table('doctors')
    op.drop_table('device_tokens')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_patients_phone_number'), table_name='patients')
    op.drop_table('patients')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
